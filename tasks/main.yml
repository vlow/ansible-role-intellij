---
- name: Dependencies are installed
  action: "{{ ansible_pkg_mgr }} state=present name={{ item }}"
  with_items:
    - tar
    - unzip
  tags: ["packages","intellij"]

# Gather required facts...
- name: Find latest version
  uri:
    url: "https://data.services.jetbrains.com/products/releases?code=IIU%2CIIC&latest=true&type=release"
    return_content: yes
    validate_certs: no
    body_format: json
  register: intellij_releases_response
  when: intellij_version == 'latest'
  tags: ["packages","intellij"]

- set_fact:
    intellij_version: "{{ intellij_releases_response.json.IIU.0.version }}"
  when: intellij_version == 'latest'
  tags: ["packages","intellij"]

- stat:
        path: "{{ intellij_install_dir }}/version.txt"
  register: version_file_stat

- command: "cat {{ intellij_install_dir }}/version.txt | sed s/^version=//"
  register: installed_version
  when: version_file_stat.exists == True

- set_fact:
    installed_version: ""
  when: version_file_stat.exists == False

# Install, if we have to...
- name: Download intellij
  get_url: url={{intellij_url}} dest={{intellij_tmp}}
  tags: ["packages","intellij"]
  when: intellij_version != installed_version

- name: Installation directory exists
  file:
    state=directory
    mode=0755
    dest={{intellij_install_dir}}
  tags: ["packages","intellij"]
  when: intellij_version != installed_version

- name: IntelliJ installation package is unarchived
  unarchive:
    copy=no
    src={{intellij_tmp}}
    dest={{intellij_install_dir}}
  tags: ["packages","intellij"]
  when: intellij_version != installed_version

- name: Version file has correct version
  lineinfile:
    create: yes
    path: "{{ intellij_install_dir }}/version.txt"
    regexp: "^version="
    line: "version={{ intellij_version }}"

- name: Retrieve intellij dir name
  command: ls -t {{intellij_install_dir}}
  register: result_intellij_folder_name
  tags: ["configuration","intellij"]

- name: Ensure intellij is configured
  template: src=idea.properties.j2 dest={{intellij_install_dir}}/{{intellij_folder_name}}/bin/idea.properties
  tags: ["configuration","intellij"]

- name: Ensure intellij bin exist
  template: src=intellij.j2 dest=/usr/bin/intellij mode=755
  tags: ["configuration","intellij"]

- name: Ensure intellij shortcut is present
  template: src=intellij.desktop.j2 dest=/usr/share/applications/intellij.desktop
  tags: ["configuration","intellij"]
